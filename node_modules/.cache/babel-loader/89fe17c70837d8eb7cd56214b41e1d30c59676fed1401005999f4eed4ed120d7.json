{"ast":null,"code":"// Function to generate a calendar\nfunction generateCalendar(year, month) {\n  const calendar = document.getElementById(\"calendar\");\n  const currentDate = new Date(year, month - 1, 1);\n  const daysInMonth = new Date(year, month, 0).getDate();\n  const startDay = currentDate.getDay();\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const table = document.createElement(\"table\");\n  const headerRow = table.insertRow();\n  for (let i = 0; i < 7; i++) {\n    const th = document.createElement(\"th\");\n    th.textContent = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"][i];\n    headerRow.appendChild(th);\n  }\n  let dayCounter = 1;\n  for (let i = 0; i < 6; i++) {\n    const row = table.insertRow();\n    for (let j = 0; j < 7; j++) {\n      const cell = row.insertCell();\n      if (i === 0 && j < startDay) {\n        // Empty cells before the first day\n        cell.textContent = \"\";\n      } else if (dayCounter <= daysInMonth) {\n        // Fill in the days of the month\n        cell.textContent = dayCounter;\n        cell.addEventListener(\"click\", function () {\n          alert(`You clicked on ${monthNames[currentDate.getMonth()]} ${dayCounter}, ${year}`);\n        });\n        if (currentDate.getMonth() === new Date().getMonth() && dayCounter === new Date().getDate()) {\n          // Highlight current day\n          cell.classList.add(\"current-month\");\n        }\n        dayCounter++;\n      }\n    }\n  }\n  calendar.innerHTML = \"\";\n  calendar.appendChild(table);\n}\n\n// Initial calendar render\nconst today = new Date();\ngenerateCalendar(today.getFullYear(), today.getMonth() + 1);","map":{"version":3,"names":["generateCalendar","year","month","calendar","document","getElementById","currentDate","Date","daysInMonth","getDate","startDay","getDay","monthNames","table","createElement","headerRow","insertRow","i","th","textContent","appendChild","dayCounter","row","j","cell","insertCell","addEventListener","alert","getMonth","classList","add","innerHTML","today","getFullYear"],"sources":["C:/Users/lapru/CS230 Calendrive/CalenDrive-1/src/Calendar.js"],"sourcesContent":["// Function to generate a calendar\r\nfunction generateCalendar(year, month) {\r\n    const calendar = document.getElementById(\"calendar\");\r\n    const currentDate = new Date(year, month - 1, 1);\r\n    const daysInMonth = new Date(year, month, 0).getDate();\r\n    const startDay = currentDate.getDay();\r\n  \r\n    const monthNames = [\r\n      \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n      \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n    ];\r\n  \r\n    const table = document.createElement(\"table\");\r\n    const headerRow = table.insertRow();\r\n  \r\n    for (let i = 0; i < 7; i++) {\r\n      const th = document.createElement(\"th\");\r\n      th.textContent = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"][i];\r\n      headerRow.appendChild(th);\r\n    }\r\n  \r\n    let dayCounter = 1;\r\n  \r\n    for (let i = 0; i < 6; i++) {\r\n      const row = table.insertRow();\r\n  \r\n      for (let j = 0; j < 7; j++) {\r\n        const cell = row.insertCell();\r\n  \r\n        if (i === 0 && j < startDay) {\r\n          // Empty cells before the first day\r\n          cell.textContent = \"\";\r\n        } else if (dayCounter <= daysInMonth) {\r\n          // Fill in the days of the month\r\n          cell.textContent = dayCounter;\r\n          cell.addEventListener(\"click\", function() {\r\n            alert(`You clicked on ${monthNames[currentDate.getMonth()]} ${dayCounter}, ${year}`);\r\n          });\r\n  \r\n          if (currentDate.getMonth() === new Date().getMonth() && dayCounter === new Date().getDate()) {\r\n            // Highlight current day\r\n            cell.classList.add(\"current-month\");\r\n          }\r\n  \r\n          dayCounter++;\r\n        }\r\n      }\r\n    }\r\n  \r\n    calendar.innerHTML = \"\";\r\n    calendar.appendChild(table);\r\n  }\r\n  \r\n  // Initial calendar render\r\n  const today = new Date();\r\n  generateCalendar(today.getFullYear(), today.getMonth() + 1);\r\n  "],"mappings":"AAAA;AACA,SAASA,gBAAgBA,CAACC,IAAI,EAAEC,KAAK,EAAE;EACnC,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;EACpD,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAACN,IAAI,EAAEC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC;EAChD,MAAMM,WAAW,GAAG,IAAID,IAAI,CAACN,IAAI,EAAEC,KAAK,EAAE,CAAC,CAAC,CAACO,OAAO,CAAC,CAAC;EACtD,MAAMC,QAAQ,GAAGJ,WAAW,CAACK,MAAM,CAAC,CAAC;EAErC,MAAMC,UAAU,GAAG,CACjB,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EACtD,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CACjE;EAED,MAAMC,KAAK,GAAGT,QAAQ,CAACU,aAAa,CAAC,OAAO,CAAC;EAC7C,MAAMC,SAAS,GAAGF,KAAK,CAACG,SAAS,CAAC,CAAC;EAEnC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1B,MAAMC,EAAE,GAAGd,QAAQ,CAACU,aAAa,CAAC,IAAI,CAAC;IACvCI,EAAE,CAACC,WAAW,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAACF,CAAC,CAAC;IACrEF,SAAS,CAACK,WAAW,CAACF,EAAE,CAAC;EAC3B;EAEA,IAAIG,UAAU,GAAG,CAAC;EAElB,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1B,MAAMK,GAAG,GAAGT,KAAK,CAACG,SAAS,CAAC,CAAC;IAE7B,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,MAAMC,IAAI,GAAGF,GAAG,CAACG,UAAU,CAAC,CAAC;MAE7B,IAAIR,CAAC,KAAK,CAAC,IAAIM,CAAC,GAAGb,QAAQ,EAAE;QAC3B;QACAc,IAAI,CAACL,WAAW,GAAG,EAAE;MACvB,CAAC,MAAM,IAAIE,UAAU,IAAIb,WAAW,EAAE;QACpC;QACAgB,IAAI,CAACL,WAAW,GAAGE,UAAU;QAC7BG,IAAI,CAACE,gBAAgB,CAAC,OAAO,EAAE,YAAW;UACxCC,KAAK,CAAE,kBAAiBf,UAAU,CAACN,WAAW,CAACsB,QAAQ,CAAC,CAAC,CAAE,IAAGP,UAAW,KAAIpB,IAAK,EAAC,CAAC;QACtF,CAAC,CAAC;QAEF,IAAIK,WAAW,CAACsB,QAAQ,CAAC,CAAC,KAAK,IAAIrB,IAAI,CAAC,CAAC,CAACqB,QAAQ,CAAC,CAAC,IAAIP,UAAU,KAAK,IAAId,IAAI,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC,EAAE;UAC3F;UACAe,IAAI,CAACK,SAAS,CAACC,GAAG,CAAC,eAAe,CAAC;QACrC;QAEAT,UAAU,EAAE;MACd;IACF;EACF;EAEAlB,QAAQ,CAAC4B,SAAS,GAAG,EAAE;EACvB5B,QAAQ,CAACiB,WAAW,CAACP,KAAK,CAAC;AAC7B;;AAEA;AACA,MAAMmB,KAAK,GAAG,IAAIzB,IAAI,CAAC,CAAC;AACxBP,gBAAgB,CAACgC,KAAK,CAACC,WAAW,CAAC,CAAC,EAAED,KAAK,CAACJ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}